version: "3.7"

services:

  postgres:
    image: postgres:15.10
    restart: unless-stopped
    container_name: postgres
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "otusdb"
      POSTGRES_USER: "otus"
      POSTGRES_PASSWORD: "password"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./postgres/init:/docker-entrypoint-initdb.d
      - ./postgres/data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U otus -d otus"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
# PGAdmin4 for easy managenet in web interface
  pgadmin:
    image: dpage/pgadmin4:8.13.0
    restart: unless-stopped
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "pgadmin@example.com"
      PGADMIN_DEFAULT_PASSWORD: "password"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin:/var/lib/pgadmin # ensure "chown -R 5050:0 ./pgadmin/"
    ports:
      - 42009:80
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

# Optional: collect metrics, store it and draw graphs
  postgres-exporter:
    image: bitnami/postgres-exporter:0.16.0
    restart: unless-stopped
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_URI: "192.168.1.254:5432/otusdb?sslmode=disable"
      DATA_SOURCE_USER: "otus"
      DATA_SOURCE_PASS: "password"
      PG_EXPORTER_EXTEND_QUERY_PATH: "/etc/postgres_exporter/queries.yaml"
    volumes:
      - ./postgres/exporter/queries.yaml:/etc/postgres_exporter/queries.yaml:ro
    ports:
      - 42008:9187
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 500M

  prometheus:
    image: prom/prometheus:v3.0.1
    restart: unless-stopped
    container_name: "prometheus"
    ports:
      - 42007:9090
    volumes:
      - ./prometheus/data:/prometheus # ensure "chown -R 65534:65534 ./prometheus"
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml # ensure "chown -R 65534:65534 ./prometheus"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=180d" 

  grafana:
    image: grafana/grafana:11.4.0
    restart: unless-stopped
    container_name: "grafana"
    volumes:
      - ./grafana/data:/var/lib/grafana # ensure "chown -R 472:0 ./grafana/data"
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources # ensure "chown -R 472:0 ./grafana/provisioning"
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml # ensure "chown -R 472:0 ./grafana/dashboard.yaml"
      - ./grafana/dashboards:/var/lib/grafana/dashboards # ensure "chown -R 472:0 ./grafana/dashboards"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - DS_PROMETHEUS=Prometheus # this is Datasource name. See grafana/provisioning/datasources/prometheus.dea.yml
      # - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/OS_Monitoring.json
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/PostgreSQL_Database.json
    depends_on:
      - prometheus
    ports:
      - 42006:3000

